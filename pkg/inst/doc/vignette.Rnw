%\VignetteIndexEntry{intcomp}
%The above line is needed to remove a warning in R CMD check
\documentclass[a4paper]{article}

\title{intcomp:\\Benchmarking tool for gene expression - copy number data integration models}

\author{Leo Lahti\footnote{leo.lahti@iki.fi} and Martin Sch{\"a}fer}

\usepackage{Sweave}
\usepackage{float}

\usepackage{amsmath,amssymb,amsfonts}
%\usepackage[authoryear,round]{natbib}


\usepackage{hyperref}
\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textit{#1}}}

\begin{document}

\maketitle

\section{Introduction}

Several algorithms have been suggested to integrate gene expression
and DNA copy number measurement to discover cancer-associated
chromosomal regions, but quantitative comparison of these models has
been missing. The \Rpackage{intcomp} R package provides a benchmarking
pipeline for quantitative comparisons between the different
implementations for integrative analysis of ge/cn data. This vignette
provides installation instructions, practical examples and references
to the algorithmic details of the \Rpackage{intcomp} benchmarking
pipeline \cite{Lahti11review}.

In the \Rpackage{intcomp} pipeline, the cancer gene detection
performance of each algorithm is evaluated based on gene
prioritization by using each method. Each method is used to order the
gene list, and the resulting order is compared to golden standard
lists of known cancer genes on simulated and real data sets. For
details, see \cite{Lahti11review}.

\section{Installation}

\subsection{Installing the intcomp benchmarking pipeline}

To install this package directly within R type:

<<inst, results = hide, eval = FALSE>>=
install.packages("intcomp", repos="http://R-Forge.R-project.org")
@

\subsection{Installing dependencies}

The benchmarking pipeline depends on various external R
packages. Install the  dependencies from within R using the following
commands:

<<deps, results = hide, eval = FALSE>>=
source("http://www.bioconductor.org/biocLite.R") 
biocLite(c("biomaRt", "DNAcopy", "DRI", "edira", 
"hgu133ahsentrezg.db", "intCNGEan", "org.Hs.eg.db", 
"PMA", "SIM", "PREDA", "CGHcall", "CNAmet"))
@

You may need to install the following packages manually: curl
library\footnote{http://curl.haxx.se/download.html} and the R packages
XML\footnote{http://cran.r-project.org/web/packages/XML/index.html},
RCurl\footnote{http://www.omegahat.org/RCurl/},
edira\footnote{http://www.statistik.tu-dortmund.de/~schaefer/},
intCNGEan\footnote{http://www.few.vu.nl/~wvanwie/software/intCNGEan/intCNGEan.html},
org.Hs.eg.db\footnote{http://www.bioconductor.org/packages/release/data/annotation/html/org.Hs.eg.db.html},
PREDA/SODEGIR\footnote{http://www.bioconductor.org/packages/devel/bioc/html/PREDA.html},
and CNAmet\footnote{http://csbi.ltdk.helsinki.fi/CNAmet/}.

\section{Running the comparison tests}

\subsection{Loading example data}

The package contains a copy of the publicly available cancer data sets
from \cite{Hyman2002} and \cite{Pollack2002} to benchmark the cancer
gene detection algorithms on real experimental data. The gene symbols
are converted into Entrez Gene IDs, and the probes are matched between
gene expression and copy number data, as detailed in the {\it
read.hyman} and {\it read.pollack} functions.

\subsubsection{Hyman et al. (2002)}

Loading Hyman et al. (2002) \cite{Hyman2002} data
set\footnote{HymancdnaDataA.tab, HymancghDataA.tab and HymanAcc.mat
  obtained from http://www.ece.ucsb.edu/pubs/ieee/index.shtml accessed
  June 2, 2010.}.

<<results=hide>>=
library(intcomp)
data(hyman)
library("org.Hs.eg.db")
hyman <- read.hyman(cdna, cgh, genenames, xx = as.list(org.Hs.egALIAS2EG))
GE <- hyman$ge        # gene expression matrix + info
CN.raw <- hyman$cn    # copy number matrix + info
gene.info <- hyman$cn.raw$info # gene location info
@

\subsubsection{Pollack et al. (2002)}

Loading Pollack et al. (2002) \cite{Pollack2002} data
set\footnote{http://www.pnas.org/content/suppl/2002/09/23/162471999.DC1/4719CopyNoGeneDatsetLegend.html
accessed June 2, 2010.}.

<<results = hide>>=
data(pollack)
pollack <- read.pollack(dat = CopyNoGeneDataset4719, clone2geneid = clone2geneid)
GE <- pollack$ge     # expression matrix (GE$data); gene info (GE$info)
CN.raw <- pollack$cn # copy number matrix (CN.raw$data); info (CN.raw$info)
gene.info <- pollack$ge$info # gene location info
@


\subsection{Golden standard list of known cancer genes}

A gloden standard list of known breast cancer genes from The Breast
Cancer Gene Database \cite{Baasiri99} is used to benchmark the
different methods on the Hyman and Pollack data sets. The cancer gene
list was
downloaded\footnote{http://www.tumor-gene.org/cgi-bin/TGDB/tgdb\_by\_name.cgi
accessed 5.6.2010; 'tgdb\_by\_name.cgi.html' and 'tgdb.txt'} and
stored to the tgdb object. The list is converted to Entrez GeneIDs,
the genes included in the experimental data are selected, as detailed
by {\it the get.brca.genes} function:

<<results=tex>>=
library("org.Hs.eg.db")
data(tgdb)
cancerGenes <- get.brca.genes(rownames(ge$data), as.list(org.Hs.egALIAS2EG), tgdb)
@

\subsection{Simulating data}

To evaluate the methods based on simulations, data can be simulated
following roughly the approach given in \cite{Schafer09}, but with
greater flexibility. The quantile grid to be simulated can be defined
entirely by the user, as well as the mixing weight, the number of
different variances to be considered and the call probabilities (for
testing {\it intcngean}).

<<test_schaefer, results = hide, eval=FALSE>>=
library(ediraAMLdata)
data(AMLdata, package="ediraAMLdata")
test_schaefer <- test.simulation(GE, CN, method="schaefer")
@

Also, testing on the data simulated by Francesco Ferrari is provided:
<<test_ferrari, results = hide, eval=FALSE>>=
test_ferrari <- test.simulation(GE, CN, method="ferrari")
@

\section{Running the benchmarking pipeline}

The example data set now contains (i) gene expression data (ge), (ii)
gene copy number data (cn), (iii) optional sample class labels
(tumor/normal), and (iv) golden standard list of known cancer genes.
The ge and cn data sets are lists containing $data$ and $info$ fields.
The probes in gene expression and gene copy number are paired; $data$
is a data matrix with gene expression (ge\$data) or gene copy number
(cn\$data) data; $info$ field is a data frame containing additional
information about genes: $loc$ indicates the genomic location of the
probes in base pairs (numeric); $chr$ and $arm$ are factors indicating
the chromosome and chromosomal arm of the probe, respectively. For
Hyman and Pollack data sets, the original non-segmented data sets are
used (cn.seg = cn.raw) in the experiments (except with intCNGEan and
CNAmet that require segmented and called data, respectively). 

To run the benchmarking tests for particular methods, use the
following. Note that some methods require segmented or called copy
number data. With Hyman and Pollack data sets, raw copy number data is
used, except in intCNGEan (segmented) and CNAmet (called). To use
segmented copy number data in all methods, set 'cn.seg = cn.raw' in
the test.geneorder.pipeline arguments.

<<run, results = hide, eval=FALSE>>=
# Set comparison methods
methods <- c("CNAmet","edira")
# Expression and raw copy number data
ge <- hyman$ge
cn.raw <- hyman$cn
# Segmentation/calling for copy number data
cgh <- process.copynumber(cn.raw)
cn.seg <- list(data = assayDataElement(cgh, 'segmented'), info = gene.info)
cn.call <- list(data = assayDataElement(cgh, 'calls'), info = gene.info)
rownames(cn.call$data) <- rownames(cn.seg$data) <- rownames(ge$data)
# Run method comparison pipeline
res_real <- test.geneorder.pipeline(ge = ge, cn.raw = cn.raw,
cn.seg = cn.raw, cn.call = cn.call, cghCall = cgh,
Labels = NULL, cancerGenes = cancerGenes, nperm=20,
input = "real", version = "normal",
methods = methods, references="none")
auc.ordered <- sort(unlist(res_real$auc))
@

<<run.simulation, results = hide, eval=FALSE>>=
methods <- c("CNAmet","edira")
res_simulated  <- test.geneorder.pipeline(ge=test_schaefer$ge,
cn.raw=test_schaefer$cn.raw, cn.seg=NULL,
cn.call=test_schaefer$cn.call,
cghCall = test_schaefer$cn.cghCall,
ge.norm = test_schaefer$ge.norm,
cn.norm = test_schaefer$cn.norm,
Labels=test_schaefer$Labels,
cancerGenes=test_schaefer$cancerGenes,
nperm = 20, input="simulations.equal.dimensions",
version = "normal",
methods=methods, callprobs=sim$callprobs,
references="both")
auc.ordered <- sort(unlist(res_simulated$auc))
@

If segmented data is supplied, then it will be used for analysis.
If segmented data is missing, then raw data will be used if supplied.
If both segmented and raw data are missing, then called data will be used if supplied.\\

\section{Comparison methods}

The list of available methods in the pipeline is retrieved with:
    
<<methods>>=
list.methods()
@
    
The following {\it implementations} are available in the
\Rpackage{intcomp} benchmarking pipeline: {\it CNAmet}
\cite{Hautaniemi04,Louhimo11}, variants of {\it DRI}
\cite{Salari2010}, {\it edira} \cite{Schafer09}, {\it intcngean}
\cite{Wieringen09}, {\it OrtizEstevez} \cite{Ortiz-Estevez11}, {\it
pint} \cite{Lahti09mlsp}, variants of {\it SIM\} \cite{Menezes2009}, 
{\it PMA} \cite{Witten09}, {\it PREDA} \cite{Bicciato09} and
exclusively for two-group comparisons (requiring Labels) {\it DRI.ct},
{\it DRI.ss}, {\it DRI.srank}, {\it DRI.sraw} \cite{Salari2010}. 

\section{Benchmarking results}
      
The prioritized cancer gene list provided by each method is compared
to the golden standard list of known cancer genes; the result contains
running times of the algorithms and the AUC values from ROC analysis.
The AUC values provide quantitative estimates of model performance in
cancer gene detection and provide the basis for the comparisons as
reported in \cite{Lahti11review}.


\subsection*{Acknowledgements}

The package has been supported by EuGESMA COST Action BM0801: European
Genetic and Epigenetic Study on AML and MDS.

\bibliographystyle{ieeetr}
\bibliography{intcomp}

\end{document}
